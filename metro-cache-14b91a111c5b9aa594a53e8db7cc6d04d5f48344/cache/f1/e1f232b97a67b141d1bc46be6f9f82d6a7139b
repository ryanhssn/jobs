__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/bilal/Desktop/work/reactNative/jobs/screens/AuthScreen.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  var _reactRedux = require(_dependencyMap[3], "react-redux");

  var _actions = require(_dependencyMap[4], "../actions");

  var actions = _interopRequireWildcard(_actions);

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    AuthScreen: {
      displayName: "AuthScreen"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/bilal/Desktop/work/reactNative/jobs/screens/AuthScreen.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var AuthScreen = _wrapComponent("AuthScreen")(function (_Component) {
    _inherits(AuthScreen, _Component);

    function AuthScreen() {
      _classCallCheck(this, AuthScreen);

      return _possibleConstructorReturn(this, (AuthScreen.__proto__ || Object.getPrototypeOf(AuthScreen)).apply(this, arguments));
    }

    _createClass(AuthScreen, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.props.facebookLogin();

        if (_reactNative.Platform.OS == "android") {
          _reactNative.BackHandler.addEventListener("hardwareBackPress", function () {
            alert('You cant go back');
            return true;
          });
        }

        this.onAuthComplete(this.props);
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        this.onAuthComplete(nextProps);
      }
    }, {
      key: "onAuthComplete",
      value: function onAuthComplete(props) {
        if (props.token) {
          this.props.navigation.navigate('map');
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _react3.default.createElement(_reactNative.View, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 33
          }
        });
      }
    }]);

    return AuthScreen;
  }(_react2.Component));

  function mapStateToProps(_ref) {
    var auth = _ref.auth;
    return {
      token: auth.token
    };
  }

  exports.default = (0, _reactRedux.connect)(mapStateToProps, actions)(AuthScreen);
});