__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/bilal/Desktop/work/reactNative/jobs/components/Slides.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  var _reactNativeElements = require(_dependencyMap[3], "react-native-elements");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    Slides: {
      displayName: "Slides"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/bilal/Desktop/work/reactNative/jobs/components/Slides.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var SCREEN_WIDTH = _reactNative.Dimensions.get('window').width;

  var Slides = _wrapComponent("Slides")(function (_Component) {
    _inherits(Slides, _Component);

    function Slides() {
      _classCallCheck(this, Slides);

      return _possibleConstructorReturn(this, (Slides.__proto__ || Object.getPrototypeOf(Slides)).apply(this, arguments));
    }

    _createClass(Slides, [{
      key: "renderLastSlide",
      value: function renderLastSlide(index) {
        if (index === this.props.data.length - 1) {
          return _react3.default.createElement(
            _reactNative.View,
            {
              style: {
                marginTop: 15
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 12
              }
            },
            _react3.default.createElement(_reactNativeElements.Button, {
              title: "Onwards!",
              raised: true,
              buttonStyle: styles.buttonStyle,
              onPress: this.props.onComplete,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 13
              }
            })
          );
        }
      }
    }, {
      key: "renderSlides",
      value: function renderSlides() {
        var _this2 = this;

        return this.props.data.map(function (slide, index) {
          return _react3.default.createElement(
            _reactNative.View,
            {
              style: [styles.slideStyle, {
                backgroundColor: slide.color
              }],
              key: slide.text,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 27
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: styles.textStyle,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 28
                }
              },
              slide.text
            ),
            _this2.renderLastSlide(index)
          );
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.ScrollView,
          {
            horizontal: true,
            pagingEnabled: true,
            style: {
              flex: 1
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 37
            }
          },
          this.renderSlides()
        );
      }
    }]);

    return Slides;
  }(_react2.Component));

  var styles = {
    slideStyle: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      width: SCREEN_WIDTH
    },
    textStyle: {
      fontSize: 30,
      color: 'white',
      textAlign: 'center',
      marginLeft: 25,
      marginRight: 25
    },
    buttonStyle: {
      backgroundColor: '#0288D1'
    }
  };
  exports.default = Slides;
});